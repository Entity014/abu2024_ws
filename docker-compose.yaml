version: "3.9"
services:
  abu_compose:
    image: abu
    build:
      context: .
      dockerfile: docker/Dockerfile
      args:
        ROS_DISTRO: humble
    stdin_open: true
    tty: true
    network_mode: host
    ipc: host
    privileged: true
    stop_grace_period: 1s
    environment:
      - ROS_DOMAIN_ID=10
      - DISPLAY=${DISPLAY}
      - QT_X11_NO_MITSHM=1
      - NVIDIA_DRIVER_CAPABILITIES=all
    volumes:
      # mount X11 socket
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - ${XAUTHORITY:-$HOME/.Xauthority}:/root/.Xauthority
      # mount workspace
      - ./robot_ws:/home/robot_ws:rw
      - /dev:/dev
    # command: sleep infinity

  uros-agent:
    image: husarion/micro-ros-agent:humble
    stdin_open: true
    tty: true
    network_mode: host
    ipc: host
    privileged: true
    stop_grace_period: 1s
    volumes:
      - /dev:/dev
    # devices:
    #   - /dev/ttyACM0:/dev/ttyACM0
    environment:
      - ROS_DOMAIN_ID=10
    command: sleep infinity

  uros1-agent:
    extends: uros-agent
    command: ros2 run micro_ros_agent micro_ros_agent serial -D /dev/ttyACM0 serial -b 115200

  uros2-agent:
    extends: uros-agent
    command: ros2 run micro_ros_agent micro_ros_agent serial -D /dev/ttyACM1 serial -b 115200
    
  localization:
    extends: abu_compose
    command: bash -c "source ~/.bashrc && ros2 launch abu_core localization.launch.py"

  detection:
    extends: abu_compose
    command: bash -c "source ~/.bashrc && ros2 launch abu_core detection.launch.py"

  robot_state:
    extends: abu_compose
    command: bash -c "source ~/.bashrc && ros2 launch abu_core state.launch.py"

  navigation:
    extends: abu_compose
    command: bash -c "source ~/.bashrc && ros2 launch abu_core navigation.launch.py"
  # gazebo:
  #   extends: abu_compose
  #   command: bash -c "source ~/.bashrc && ros2 launch abu_description gazebo.launch.py"

