version: "3.9"
services:
  abu_compose:
    image: abu
    build:
      context: .
      dockerfile: docker/Dockerfile
      args:
        ROS_DISTRO: humble
    stdin_open: true
    tty: true
    network_mode: host
    ipc: host
    privileged: true
    stop_grace_period: 1s
    environment:
      - ROS_DOMAIN_ID=10
      - DISPLAY=${DISPLAY}
      - QT_X11_NO_MITSHM=1
      - NVIDIA_DRIVER_CAPABILITIES=all
    volumes:
      # mount X11 socket
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - ${XAUTHORITY:-$HOME/.Xauthority}:/root/.Xauthority
      # mount workspace
      - ./robot_ws:/home/robot_ws:rw
    # command: sleep infinity

  uros1-agent:
    image: husarion/micro-ros-agent:humble
    stdin_open: true
    tty: true
    network_mode: host
    ipc: host
    privileged: true
    stop_grace_period: 1s
    devices:
      - ${SERIAL_PORT:-/dev/ttyACM0}
    environment:
      - ROS_DOMAIN_ID=10
    command: ros2 run micro_ros_agent micro_ros_agent serial -D ${SERIAL_PORT:-/dev/ttyACM0} serial -b 115200
  
  uros2-agent:
    image: husarion/micro-ros-agent:humble
    stdin_open: true
    tty: true
    network_mode: host
    ipc: host
    privileged: true
    stop_grace_period: 1s
    devices:
      - ${SERIAL_PORT:-/dev/ttyACM1}
    environment:
      - ROS_DOMAIN_ID=10
    command: ros2 run micro_ros_agent micro_ros_agent serial -D ${SERIAL_PORT:-/dev/ttyACM1} serial -b 115200

  gazebo:
    extends: abu_compose
    command: bash -c "source ~/.bashrc && ros2 launch abu_description gazebo.launch.py"
  
  navigation:
    extends: abu_compose
    command: bash -c "source ~/.bashrc && ros2 launch abu_core navigation.launch.py"

